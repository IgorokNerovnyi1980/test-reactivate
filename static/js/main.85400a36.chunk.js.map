{"version":3,"sources":["components/Button.jsx","components/Geolocation.jsx","helpers/geo.js","components/Slider.jsx","components/Input.jsx","pages/Weather.jsx","helpers/parserColor.js","App.js","index.js"],"names":["Wrapper","styled","button","Button","text","type","fnClick","fnChange","onClick","onChange","name","div","Geolocation","checked","fhChange","useState","location","setLocation","URL","getMyLocation","a","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","console","log","result","axios","get","testApi","Input","input","Slider","value","fnInput","min","max","step","onInput","form","props","top","inputValue","inputName","inputType","btnLabel","btbType","placeholder","fnSubmit","onSubmit","bg","Base","color","setColor","sliderValue","setSliderValue","checkValue","setCheckValue","locationValue","setLocationValue","degValue","setDegValue","useEffect","num","arr","split","splice","join","parseColor","handleInputsChange","e","target","handleSubmit","preventDefault","Math","round","abs","Number","GlobalStyle","createGlobalStyle","App","Weather","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85400a36.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.button`\n    min-width:50px;\n    max-height:50px;\n    padding:5px 8px;\n    background-color:blue;\n    border:1px solid blue;\n    border-radius:2px;\n    color:white;\n    cursor:pointer;\n    transition:0.2s;\n    \n    :hover{\n        background-color:white;\n        color:blue;\n    }\n    :active{\n        transform:scale(0.95);\n    }\n`;\n\nconst Button = (\n    {\n        text = 'default',\n        type = 'button',\n        fnClick = () => { },\n        fnChange = () => { }\n\n\n    }) => {\n\n    return(\n        <Wrapper\n            type={type}\n            onClick={fnClick}\n            onChange={fnChange}\n            name={text}\n        >\n            {text}\n        </Wrapper>\n    )\n};\n\nexport default Button;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { geoFindMe } from '../helpers/geo';\nimport axios from 'axios';\n//components\nimport Button from './Button'\n\nconst Wrapper = styled.div`\n    position: fixed;\n    top:5%;\n    left:50%;\n    transform:translate(-50%, -50%);\n    min-width:250px;\n    min-height:30px;\n    padding: 0 5px;\n    display:flex;\n    justify-content:space-between;\n    align-items:center;\n    input{\n        cursor:pointer;\n    }\n`;\n\n\nconst Geolocation = (\n    {\n        checked = false,\n        fhChange = () => { },\n\n    }) => {\n\n        const [location, setLocation ] = useState('Determine my position');\n\n        const URL ='www.metaweather.com/api/location/search/?lattlong=';\n        const testCoordinates = '36.96,-122.02';\n        // 36.96,-122.02\n        //50.7403341,31.0297808\n\n        const getMyLocation = async () => {\n            const result = await geoFindMe();\n            setLocation(result);\n            console.log('test Url', `${URL}${testCoordinates}`);\n            const testApi = await axios.get(`${URL}${testCoordinates}`);\n            console.log(testApi);\n        }\n\n    return(\n<Wrapper>\n    <p>{location}</p>\n    <Button\n        type='button'\n        text='Request'\n        fnClick={getMyLocation}\n    />\n         \n    \n</Wrapper>\n    )\n};\n\nexport default Geolocation;","export function geoFindMe() {\n\n  // const status = document.querySelector('#status');\n  // const mapLink = document.querySelector('#map-link');\n\n  // mapLink.href = '';\n  // mapLink.textContent = '';\n\n  function success(position) {\n    const latitude  = position.coords.latitude;\n    const longitude = position.coords.longitude;\n\n  //   status.textContent = '';\n  //   mapLink.href = `https://www.openstreetmap.org/#map=18/${latitude}/${longitude}`;\n  //   mapLink.textContent = `Latitude: ${latitude} °, Longitude: ${longitude} °`;\n  console.log(`Latitude: ${latitude} °, Longitude: ${longitude} °`)\n    return `Latitude: ${latitude} °, Longitude: ${longitude} °`;\n  }\n\n  function error() {\n  //   status.textContent = 'Unable to retrieve your location';\n  return 'Unable to retrieve your location';\n  }\n\n  if (!navigator.geolocation) {\n  //   status.textContent = 'Geolocation is not supported by your browser';\n  return 'Geolocation is not supported by your browser';\n  } else {\n    // status.textContent = 'Locating…';\n    navigator.geolocation.getCurrentPosition(success, error);\n    return 'Locating…';\n  }\n\n};\n\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n    position: fixed;\n    bottom:5%;\n    left:50%;\n    transform:translate(-50%, -50%);\n    min-width:250px;\n    min-height:30px;\n`;\n\nconst Input = styled.input`\n    appearance: none;\n    width: 100%;\n    height: 25px;\n    background: #d3d3d3;\n    border-radius:2px;\n    opacity:.7;\n    transition:.2s;\n    :hover{\n        opacity:1\n    }\n    ::-webkit-slider-thumb {\n    appearance: none;\n    width: 25px;\n    height: 25px;\n    background: blue;\n    border-radius:2px;\n    cursor: pointer; \n}\n`;\n\n\nconst Slider = (\n    {\n        value = 5,\n        fnInput = () => { }\n    }) => {\n\n    return(\n        <Wrapper>\n            <Input\n               type='range'\n               min='1'\n               max='765'\n               step='1'\n               name='slider'\n               value={value}\n               onInput={fnInput}\n            />\n        </Wrapper>\n    )\n};\n\nexport default Slider;","import React from 'react';\nimport styled from 'styled-components';\n//components\nimport Button from './Button';\n\nconst Wrapper = styled.form`\n    position: fixed;\n    top:${props => `${props.top}%`};\n    left:50%;\n    transform:translate(-50%, -50%);\n    min-width:250px;\n    min-height:50px;\n    border-radius:3px;\n    border-bottom:1px solid #d3d3d3;\n    display:flex;\n    justify-content:space-between;\n    align-items:center;\n    \n    input{\n        padding-left:5px;\n        \n    }\n`;\n\nconst Input = (\n    {\n        inputValue = '',\n        inputName = 'default',\n        inputType = 'text',\n        btnLabel,\n        btbType,\n        placeholder = '',\n        top = '50',\n        fhChange = () => { },\n        fnSubmit = () => { }\n\n    }) => {\n\n    return(\n       <Wrapper onSubmit={fnSubmit} top={top} name={inputName}>\n           \n               <input \n                    type={inputType}//'text'\n                    name={inputName}//'position'\n                    value={inputValue}\n                    onChange={fhChange}\n                    placeholder={placeholder} \n               />\n               <Button\n                    type={btbType}\n                    text={btnLabel}\n                />\n       </Wrapper> \n    )\n};\nexport default Input;","import React,{ useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { parseColor, parseDeg } from '../helpers/parserColor'\n//components\nimport Geolocation from '../components/Geolocation';\nimport Slider from '../components/Slider';\nimport Input from '../components/Input';\n\nconst Wrapper = styled.div`\n    width:100vw;\n    height:100vh;\n    background-color:${props => `RGB(${props.bg})`};\n`;\n\nconst Base = () => {\n\n    const [ color, setColor ] = useState('0,255,255');\n    const [sliderValue, setSliderValue] = useState(0)\n    const [ checkValue, setCheckValue ] = useState(false);\n    const [ locationValue, setLocationValue ] = useState('');\n    const [ degValue, setDegValue] = useState('');\n\n    useEffect(()=>{\n        setColor(parseColor(sliderValue))\n    },[sliderValue])\n\n\n    const handleInputsChange = e => {\n        switch(e.target.name) {\n            case 'myGeolocation': \n                setCheckValue(e.target.checked);\n                break\n            case 'location': \n                setLocationValue(e.target.value);\n                break\n            case 'slider': \n                setSliderValue(e.target.value);\n                break\n            case 'deg': \n                setDegValue(e.target.value);\n                break\n            default: return;\n          };\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        switch(e.target.name) {\n            case 'location': \n                console.log('submit',e.target.name, locationValue);\n                break\n            case 'deg': \n                setSliderValue(parseDeg(degValue));\n                break\n            default: return;\n          };\n    \n    };\n    console.log(color)\n\n    return(\n        <Wrapper bg={ (color === '0,255,255' ? '211, 222, 222' : color)}>\n            <Geolocation\n                checked={checkValue}\n                fhChange={handleInputsChange}\n            />\n            <Input\n                inputValue = {locationValue}\n                inputName = 'location'\n                inputType = 'text'\n                btnLabel ='Search'\n                btbType = 'submit'\n                placeholder = 'enter name of location'\n                top = '50'\n                fhChange = {handleInputsChange}\n                fnSubmit = {handleSubmit}\n            />\n            <Input\n                inputValue = {degValue}\n                inputName = 'deg'\n                inputType = 'number'\n                btnLabel = 'Apply'\n                btbType = 'submit'\n                placeholder = 'number of temperature'\n                top = '70'\n                fhChange = {handleInputsChange}\n                fnSubmit = {handleSubmit}\n            />\n            <Slider\n                value={sliderValue}\n                fnInput={handleInputsChange}\n            />\n        </Wrapper>\n    )\n};\n\nexport default Base;","export const parseColor = function (num){\n\n    let value = '0,255,255';\n    const arr = value.split(',')\n\n    if(num <= 255){\n        arr.splice(2, 1, (255 - num));\n        return arr.join()\n    }else if(num > 255 && num <= 510){\n        arr.splice(0, 3, (num - 255), 255, 0);\n        return arr.join()\n    }else if(num > 510 && num <= 765){\n        arr.splice(0, 3, 255,(255 - (num-510)), 0);\n        return arr.join()\n    }\n};\n\nexport const parseDeg = function (num){\n    const coeficient = 19;\n\n    if(num <= -10){\n        return 1\n    }else if(num >= -9){\n       if(num < 0){\n            return Math.round((10 - Math.abs(num)) * coeficient);\n        }else if(num >= 31){\n            return 764\n        }else{   \n            return Math.round(((Number(num) + 10) * coeficient));\n        }\n       \n    }\n};","import React from 'react';\nimport {createGlobalStyle} from 'styled-components';\n//pages\nimport Weather from './pages/Weather';\n\n\nconst GlobalStyle = createGlobalStyle `\n  * {\n    box-sizing: border-box;\n  }\n\n  *:after, *:before {\n    box-sizing: inherit;\n  }\n\n  p, ul, li, h1, h2, h3, h4 ,h5 ,h6, html, body{\n    margin: 0;\n    padding: 0;\n  }\n  h1, h2, h3, h4,h5, h6{\n    font-weight: normal;\n  }\n  input, button{\n    outline:none;\n    border:none;\n    background:none;\n  }\n\n  body{\n    font-family: 'Helvetica', sans-serif;\n    font-size: 14px;\n    color: #000000;\n    font-weight: 400;\n    min-width: 320px;\n    overflow-x: hidden;\n    background: #ffffff;\n    line-height: normal;\n  }\n\n  input, textarea{\n    outline: none;\n  }\n\n`;\n\nfunction App() {\n\n\n    return (\n        <> \n          < GlobalStyle />\n          <Weather />\n        </>\n    );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}